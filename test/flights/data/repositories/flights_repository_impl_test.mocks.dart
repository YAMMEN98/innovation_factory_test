// Mocks generated by Mockito 5.4.0 from annotations
// in innovation_factory_test/test/flights/domain/repositories/flights_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:innovation_factory_test/src/core/common_feature/domain/entities/api_response_model.dart'
    as _i3;
import 'package:innovation_factory_test/src/features/home/flights/data/data_sources/remote/flights_api.dart'
    as _i4;
import 'package:innovation_factory_test/src/features/home/flights/domain/entities/filtering_flights_response_model.dart'
    as _i6;
import 'package:innovation_factory_test/src/features/home/flights/domain/usecases/filtering_flights_usecase.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiResponse_1<T> extends _i1.SmartFake
    implements _i3.ApiResponse<T> {
  _FakeApiResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FlightsApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlightsApi extends _i1.Mock implements _i4.FlightsApi {
  MockFlightsApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  _i5.Future<_i3.ApiResponse<_i6.FilteringFlightsResponseModel>>
      filteringFlights(_i7.FlightsParams? params) => (super.noSuchMethod(
            Invocation.method(
              #filteringFlights,
              [params],
            ),
            returnValue: _i5.Future<
                    _i3.ApiResponse<_i6.FilteringFlightsResponseModel>>.value(
                _FakeApiResponse_1<_i6.FilteringFlightsResponseModel>(
              this,
              Invocation.method(
                #filteringFlights,
                [params],
              ),
            )),
          ) as _i5.Future<_i3.ApiResponse<_i6.FilteringFlightsResponseModel>>);
}
